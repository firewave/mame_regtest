mame_regtest
	features:
		- per-cart configuration
		- check every game with created files (re-run after clean run)
		- add option for testing of .inp file writing/reading (-record/-playback)
		- add "start_at" for devices
		- use transparent crosshair?
		- add "hang"/deadlock detection (-watchdog / usable from 0.136)
		- multipass XPath (e.g. first select m6502 cpus and then all with autosave from those nodes)
		- multithreading mode
		- configuration rewrite
			- empty options will not properly overwrite/reset existing options to default values
			- print config values in read function (or put in array and print function for array)
			- cleanup post-loading code of configuration (checks, output etc.)
			- proper handling of default values in config (add additional entry in struct)
			- move variables into the structure (only one dynamic string type)
			- read all options as const to avoid modifications outside the config
			- report unknown options
			- use register function to add config values?
		- add macro to output files/folders for version/revision etc.
		- use the following debugger commands
			- gtime <milliseconds in hex>
			- hardreset (causes endless restarts of MAME)
			- snap
		- add option to override debugscript
		- use more command-line options
			- -verify*
			- -list*
			- test frontend functions (-listfull etc.)
			- call -validate?
		- add soft/hardreset tests after each call like "autosave" test?
			- how will it work with -autosave?
		- output data enhancements
			- add clean/merged mame_regtest configuration to output data
			- add memory dumps to the output files for -debug runs?
			- output the software list only once and only when used
				- check for existing files
			- esq(?) outputs some invalid characters - add UTF-8 to header?
			- use special prefix for non-output XMLs like config, softwarelists, etc. (maybe '_'?)
			- mark the different autosave calls (load / save)
			- store both output file states in case of autosave
		- disallow usage of gdb and valgrind at the same time
		- make it possible to set affinity of a run (SetProcessAffinityMask() / sched_setaffinity())
		- add signal/abort handler and cleanup in it
		- do not check the default ramsize again in bios/ram combination runs
		- take a look at messtest for "hardreset" tests and extended image testing
		- image testing
			- attribute to disable an image entry in the XML
			- add base folder for images in XML (could also be used for parsing a folder?)
				- read carts from a directory?
				- add parse flag?
				- only use on relative path entries (x:\, /, \\, etc.)
				- use folder node in-between to be able to switch folders
			- read images from folder with same name as device (look for XML first / specify folder in XML?)
			- add option with folder for device XMLs?
		- add XPath support for software lists
			- add option to only check software, that is supported
			- use DTD for softlists
				- how to load software.dtd? must be in same path as executable
		- measure the real time necessary for the execution to detect slowdowns
		- add support for disks in softlist
		- delete all existing dummy_root and mrt_temp folders on start-up?
		- all bios/ramsize/configuration/dipswitch combinations
			- call function with array
			- process the first entry and call itself with a smaller array
		- add detection of duplicated bios and ramsize entries
		- try to create append_to_array() based on split_string()
		- handle multiple software lists in hack
		- log info about softwarelist entries without matching interface
		- how to specify a specific device in softwarelist tests?
		- document all the exitcodes in README
		- avoid duplicated cleanup code for dips and configurations - use generic function
		- add options to makefile for DEBUG and LOG_ALLOC
		- make pointer array dynamic
		- test again with LOG_ALLOC and *all* features enabled
		- prepare softwarelists before processing the data and store the path in the driver_info
			- add append flag to copy_file()
		- run without XML creation
		- add option "devicefile_dir" to load the mrt_*.xml from
			- allow image paths to be absolute or relative to the current folder (no ..)
		- change the image xml format to include driver subnodes, so you don't need one for each driver
			- additional format? different filename than the others?
		- add function to config.c/.h to store configuration as XML
		- add support for multiple configurations
			- mame_regtest <config1> <config2>
			- change configuration to store the values in the big array and not external variables
			- get rid of test-specific static variables
			- make it possible to use multiple configurations
				- config_object {
					void* xml;
					void* root;
					config_entries[]
				}
		- SetNamedPipeHandleState
			- PIPE_NOWAIT
		- make sure, that valgrind log and the -log output are not being wiped with store_output=2
		- bail out when -listxml returns something else than 0
		- properly handle and report -listxml failure
		- make it easier to perform batch processing by allowing config overrides via "-<key> <value>" command-line option?
		- add a test, that the time shown at the end doesn't match the -str 10 value
		- add windbg support
		- check if gdb exists when use_gdb is set to 1
		- only parse "softwarelist" and "devices" if necessary - like ramoption
		- add schemas to XMLs
		- gdb --batch hangs on linux since it waits for key input (ubuntu 10.04 x64)

	internal:
		- call parse_directory() in execute_mame() / call clear_directory() in execute_mame2()
		- make pointers const (or const * const)
		- move MNG frame parsing into seperate function
		- add printf-format support to append_string()
		- use functions for lists
			- list_create()
			- list_next_entry()
			- list_insert() - sorted
			- list_append() - unsorted
			- list_free()
		- rename CFG_STR_PTR to CFG_STR
		- handle all options as string (use atoi() to convert to integers)
		- factor out duplicated PNG/MNG code
		- create open_mng_and_skip_sig() for PNG
		- get MEND reference out of IDAT function
		- change ram, bioses and devices from arrays to lists
			- add sanity checks for maximum bios, ramsize and device count
		- use different prefix for cfg_type enum / conflicts with config_entry
		- run test_createconfig in dummy_root to avoid usage of existing mame.ini (and other other command-line option calls)
		- use macros FREE(), XMLFREE() etc. which includes the setting to NULL
		- port mrt_system() to non-windows systems

	issues/bugs/errorhandling:
		- avoid duplicated slashes
		- properly handle invalid XPath expressions (check for DRIVER_ROOT)
		- bail out when invalid config_entry_type found?
		- test chdir() on start-up and bail out when it fails
		- do not test dipswitch/configurations when additional information is missing in -listxml
		- test with path with whitespaces
		- are there dipswitches, that are depending on multiple ports?
		- make "hack_pinmame" fully working
		- add errorhandling to all libxml2 functions
		- bail out when any of the postfix counters would overflow

	documentation:
		- wiki
			- the different builds
			- how the results are created
			- the machine the tests are run on
			- the resulting command-line
			- a run on the official binary once the cycle is completed
			- runs with the usual builds on the u-releases
			- add MAME version to hack_mngwrite description (change seems to be in 0.108u5)
			- add notes about dependencies between options in the documentation
			- add note to "use_debug" about needing a build with USE_DEBUGGER=1 and about the version, that started to include the debugger in non-debug builds
			- update building instructions in Wiki
			- verify the version number for software lists
			- add link to configuration on main mame_regtest page
		- document upper limit of dipswitches/devices/etc. of 100000		

	compilation:
		- fix compilation on systems, that already have a htonl() function
			- #undef htonl might help
		- change LITTLE_ENDIAN/BIG_ENDIAN defines - they are both defined on some systems (maybe BYTE_ORDER? LSB_FIRST?)
		- make doesn't work when the additional files already exist and you compile by target (e.g. mame_regtest.exe)
		- create working x64 version
		- compiler warnings in optimized build:
			common.c:598: warning: 'out' may be used uninitialized in this function
			common.c:600: warning: 'err' may be used uninitialized in this function
		
	Visual Studio:
		- move the Microsoft-specific defines into a seperate header
		
	create_report:
		- write comparison tool
			- parse dir A and check dir B for missing file
			- parse dir B and check dir A for new files
			- show the following
				- files differ (PNG/MNG frame diffs)
				- exitcode differs
				- files missing
				- new files
				- stdout/stderr differs
		- add documentation for configuration
		- HTML report
			- create HTML report (different variants)
				Unexpected Returnvalues (sourcefile - driver - returncode - details [flags, stdout])
				Untested Games (sourcefile - driver)
				Image Comparison results (sourcefile - driver / with images links - before and after)
				All Result Images
			- add paging to HTML report (by letters / x entries per page)
			- add all messages to HTML report
			- add all options to HTML report
			- put HTML report into a folder and copy pictures in a <html_report_name>_new/<html_report_name>_ref folder
			- add option for main HTML report folder
			- make HTML report work in Mozilla ( use /ref and /new links)
		- extract differing frames (also for HTML report)
		- show PNG differences (use pngcmp)
		- color codes based on exitcodes
		- expose the data (collect the necessary XMLs and add them to a subfolder?)
		- wiki syntax
			| row1 | row 2 |
		- create an intermediate format to process, so it's not necessary to process all output again when a new version comes out
			- add option to merge the output to a report
		- properly handle sets with autosave (use index in XPath to access the second set of nodes when both support autosave)
		- handle missing attributes properly
		- add the various XPaths as options in the configuration
		- create default configuration for create_report to match removed options
			- result_file
			- add some useful reports from old create_report
		- use proper formating for "(autosave)" string
		- use grep to diff each file
			- regex for auto.sta "^[+-].*auto.sta"
		- check for "cheat expression" errors in stderr
		- add check for a specific string as option 
			- replace "called within reset scope by" with it -> field="stderr" string="called within reset scope by"
			- allow multiple ones
		- replace hard-coded format with templates
		- use tables in comparison report?
		- create output_folder
			- same behavior as mame_regtest output folder
		- convert \n to <br> in stdout and stderr output
		- how to support multiples paths for comparison reports?
		- try to detect new/missing sets in comparison separately
		- note differences about bios or ramsize etc. in results
		- when merged configuration exists in results folder add information to report
		- comparison doesn't crate output folder - doesn't complain when it's missing either
		- add optional to list OPTIONAL warnings
		- add option to print negative exitcodes in hex
		- add reports, that parse -log output for like "unmapped writes" and stuff
		- add HTML version of the error report
		- filter gdb output
			- stdout
				- "[New Thread"
				- "[Inferior"
			- stderr
				- "No stack."
		- in comparison report show which is which
			
	create_image_xml
		- add more output to create_image_xml
		
	pngcmp:
		- how to speed up writing of diff?
		- try to optimize it, but comparing and writing in the same loop and just don't write the final bitmap when they differ
		- package optimized mingw binary instead of Visual Studio one

	Known Issues:
		- not everything is properly encoded by xmlEncodeEntitiesReentrant()
		- using autosave will overwrite the initial valgrind log-file for the driver (well..not really, it adds the pid - still you want to differ them easily)

	Test TODOs:
		- create testset with images for each device in each driver
		- nightly test
			- checkout SVN
			- get revision number
			- create config on demand
			- run test for all 4 flavours for GCC and VS2010
				- 32bit
				- 64bit
				- 32bit debug
				- 64bit debug
			- image comparison
				- compare indiviual test with each other
					- use 32bit as base
				- compare against previous revision
			- upload error report and comparison report to some webspace

	Misc:
		- create patch to write ui_popup() to -log output
		- MAME patches
			- add "exit"/"run-and-hide" command to debugger
